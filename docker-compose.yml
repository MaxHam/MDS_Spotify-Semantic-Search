---
version: '3.4'
services:
  weaviate:
    command:
    - --host
    - 0.0.0.0
    - --port
    - '8081'
    - --scheme
    - http
    image: semitechnologies/weaviate:1.19.0
    ports:
    - 8081:8081
    restart: on-failure:0
    environment:
      CONTEXTIONARY_URL: contextionary:9999
      TRANSFORMERS_INFERENCE_API: 'http://t2v-transformers:8080'
      QNA_INFERENCE_API: "http://qna-transformers:8080"
      QUERY_DEFAULTS_LIMIT: 25
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'true'
      PERSISTENCE_DATA_PATH: '/var/lib/weaviate'
      DEFAULT_VECTORIZER_MODULE: 'text2vec-contextionary'
      ENABLE_MODULES: 'qna-transformers, text2vec-contextionary'
      CLUSTER_HOSTNAME: 'node1'
  contextionary:
    environment:
      OCCURRENCE_WEIGHT_LINEAR_FACTOR: 0.75
      EXTENSIONS_STORAGE_MODE: weaviate
      EXTENSIONS_STORAGE_ORIGIN: http://weaviate:8081
      NEIGHBOR_OCCURRENCE_IGNORE_PERCENTILE: 5
      ENABLE_COMPOUND_SPLITTING: 'false'
    image: semitechnologies/contextionary:en0.16.0-v1.0.2
    ports:
    - 9999:9999
  t2v-transformers:
    image: semitechnologies/transformers-inference:sentence-transformers-msmarco-distilbert-base-v2
    # environment:
    #   ENABLE_CUDA: '1'
    #   NVIDIA_VISIBLE_DEVICES: all
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #       - capabilities: [gpu]
  # qna-transformers:
  #   image: semitechnologies/qna-transformers:bert-large-uncased-whole-word-masking-finetuned-squad
    # environment:
    #   ENABLE_CUDA: '1'
    #   NVIDIA_VISIBLE_DEVICES: all
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #       - capabilities: [gpu]
  maria-db:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - db_data:/var/lib/mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: spotifyDataset
      MYSQL_USER: root
      MYSQL_PASSWORD: root
    ports:
      - "3306:3306"
  webapp:
    build:
        context: ./webapp
        dockerfile: Dockerfile
    ports:
      - "3000:3000"
    env_file:
      - ./webapp/.env
volumes:
  db_data: {}
...